/**
 * Tracking Provider for Google tag Manager
 * This class servers as a interface between the cnTracking wrapper and Google tag manager
 *
 * Usage:
 *
 * 1) This file has to be included inside the Head (synchronous loading) and after
 *    loading the cnTracking wrapper
 * 2) In addition, the GTM snippet has to be added to your html AT THE BOTTOM of
 *    your body tag. (page level data inside the dataLayer can only be modified
 *    BEFORE loading that snippet!)
 */

/**
 * Initialize dataLayer object used by Google Tag Manager
 */
var dataLayer = ( typeof dataLayer != 'undefined' && dataLayer instanceof Array ) ? dataLayer : [];

/**
 * Google Tag Manager tracking provider for use in tracking.js
 * @type {googleGTM}
 */
var googleGTM = function(){

    var events = {
        page: {
            initial: 'loadDataLayer',
            sequent: 'virtualPageview'
        }
    };

    // All page level stuff needs to be inside the first object pushed into the datalayer
    var init = false;

    // --- Normal Tracking -----------------------------------------
    /**
     * set data of page
     * @param data
     */
    this.trackPage = function(data){
        var sendData = $.extend({}, data);

        if(init)
            return this.trackEvent(events.page.sequent, sendData);

        init = true;
        sendData.event = events.page.initial;
        dataLayer.push(sendData);
    };

    /**
     * add data for teaser
     * @param eventKey
     * @param data
     * @param context
     */
    this.trackEvent = function(event, parameters){
        var sendParams = {}
        sendParams.eventData = $.extend({}, parameters);
        sendParams.event = event;
        dataLayer.push(sendParams);

    };

};

cnTracking.addProvider(new googleGTM());