(function ($) {

    var lastWidth = 0;

    /**
     * Internet Explorer fix
     * @returns {*}
     */
    function getCurrentScriptIE() {
        var scripts =document.getElementsByTagName('script');
        return scripts[scripts.length - 1];
    }

    var currentScript = document.currentScript || getCurrentScriptIE();

    if(typeof(currentScript) === 'function')
        currentScript = currentScript();

    /**
     * Method to send the height of the content to a parent page.
     *
     * @param parent_url: url where the message is sent to
     * @param offset: optional parameter to add an offset height
     * @returns
     */
    var sendContentHeight = function(parent_url) {

        // The first param is serialized using $.param (if not a string)
        // and passed to the parent window.
        // If window.postMessage exists, is is used to send
        // the parameter. Otherwise it is passed in the location hash.
        // The second param is the targetOrigin.
        function setHeight() {
            var height = $('body').outerHeight(true)*1;
            var message = "if_height=" + String(height);
            parent.postMessage(message, parent_url);
        }

        // Now the DOM has been set up (and the height should be set).
        // Invoke setHeight.
        setHeight();
    };

    /**
     * Creating an iframe for loading content within.
     *
     * @param id id of element where iFrame will be appended
     *
     * @param url domain of the iFrame content
     * @param path path of iframe content without domain
     * @param initalHeight
     *            initial height of iframe will be overwritten if height is sent
     * @param initalWidth
     *            initial width of iframe
     * @returns
     */
    var appendDynamicHeightIFrame = function(selector, url, offset) {

        // Keep track of the iframe height.
        var if_height,

            // Append the iFrame
            iframe = jQuery(selector);
        offset = offset || 0;
        // Setup a callback to handle the dispatched MessageEvent event.
        // In cases where window.postMessage is supported,
        // the passed event will have .data, .origin and .source properties.
        // Otherwise, this will only have the .data property.
        window.addEventListener('message', function(e) {

            var current   = window.location.href.replace(/^http(s?)\:/,'');
            var origin    = e.origin.replace(/^http(s?)\:/,'');
            var iFrameSrc = iframe.attr('src').replace(/^http(s?)\:/,'');

            // Check origin
            if(iFrameSrc.indexOf(origin) !== 0 && current.indexOf(origin) !== 0)
                return;
            // Check message
            if(typeof(e.data) === 'string' && e.data.indexOf('if_height') >= 0 ) {

                // Get the height from the passsed data.
                var h = Number(e.data.replace(/.*if_height=(\d+)(?:&|$)/, '$1'));

                if (!isNaN(h) && h > 0 && h !== if_height ) {
                    h += offset*1;
                    // Height has changed, update the iframe.
                    iframe.height(if_height = h);
                }

            }
        });
    };

    // Selector of the iframe
    var selector = currentScript.getAttribute('data-iframe-selector');
    // Is the script added to the resizeable iframe
    var isIframe = currentScript.getAttribute('data-iframe') != "no";
    var sizeOffset = currentScript.getAttribute('data-size-offset') || 0;

    // Needs to notify the parent window of its size
    if(isIframe) {

        $(window).load(function() {

            // tries to get the x_domain_url aut of the session storage
            var x_domain_url = window.sessionStorage.getItem('x_domain_url');

            // when none is found reads the value form the refferer and sets the sessionStorage
            if(!x_domain_url || document.referrer != x_domain_url) {
                x_domain_url = document.referrer;
                window.sessionStorage.setItem('x_domain_url', x_domain_url);
            }

            $(window).resize(function(){

                try {
                    if(Math.abs(lastWidth - $('body').outerWidth(true)) > 0) {
                        $(sendContentHeight(x_domain_url));
                        lastWidth = $('body').outerWidth(true);
                    }
                }
                catch(err) {
                    console.log(err)
                }

            });

            try {
                $(window).trigger('resize');
            }
            catch(err) {
                console.log(err)
            }

        });

    }

    // has an listener
    if(selector){
        $(window).load(function(){

            $(selector).each(function(){
                $(appendDynamicHeightIFrame($(this), null, sizeOffset));
            });

            $(selector).each(function(){
                $(this).width('99%');
            });

        });

    }

    $(document).on('cnd:iframeresize:add', function(event, data){
        var target = data ? $(data) : $(event.target);
        $(appendDynamicHeightIFrame($(target), null, sizeOffset));
        $(target).width('99%');
    });

})(jQuery);
